{"version":3,"file":"static/js/186.c536277c.chunk.js","mappings":"yNAuCA,UAnCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAECC,EAAAA,EAAAA,IAAgBT,GAFjB,OAEXU,EAFW,OAGjBN,EAAWM,GAHM,gDAKjBJ,EAAS,EAAD,IALS,yDAAH,qDAQlBE,GACD,GAAE,CAACR,KAGF,gCACGK,IAAS,yBAAMA,KAChB,wBACGF,EAAQQ,KAAI,SAAAC,GACX,OACE,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GAKnB,QAIR,C,8LCnCKC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAW,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACPF,EAAAA,EAAAA,IAAA,uCACgBD,EADhB,iBACgCG,EADhC,wCADO,cACnBT,EADmB,yBAIlBA,EAAIU,KAAKC,SAJS,2CAAH,qDAOXC,EAAc,mCAAG,WAAOC,GAAP,4FAAcJ,EAAd,+BAAqB,EAArB,SACVF,EAAAA,EAAAA,IAAA,gCACSD,EADT,iBACyBG,EADzB,kBACuCI,EADvC,wCADU,cACtBb,EADsB,yBAKrBA,EAAIU,KAAKC,SALY,2CAAH,sDAOdG,EAAe,mCAAG,WAAMT,GAAN,uFACXE,EAAAA,EAAAA,IAAA,iBAAoBF,EAApB,oBAAkCC,EAAlC,oBADW,cACvBN,EADuB,yBAGtBA,EAAIU,MAHkB,2CAAH,sDAKfK,EAAgB,mCAAG,WAAMV,GAAN,uFACZE,EAAAA,EAAAA,IAAA,iBACNF,EADM,4BACgBC,EADhB,oBADY,cACxBN,EADwB,yBAKvBA,EAAIU,KAAKM,MALc,2CAAH,sDAOhBjB,EAAe,mCAAG,WAAOM,GAAP,4FAAWI,EAAX,+BAAkB,EAAlB,SACXF,EAAAA,EAAAA,IAAA,iBACNF,EADM,4BACgBC,EADhB,gCAC+CG,IAFpC,cACvBT,EADuB,yBAKtBA,EAAIU,KAAKC,SALa,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","service/movie-api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../../service/movie-api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const res = await getMovieReviews(movieId);\n        setReviews(res);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <div>{error}</div>}\n      <ul>\n        {reviews.map(review => {\n          return (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;","import axios from 'axios';\n\nconst API_KEY = '874182b6b3aecb13c206a219dffff167';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrending = async (page = 1) => {\n  const res = await axios.get(\n    `/trending/movie/week?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n  return res.data.results;\n};\n\nexport const getMovieSearch = async (query, page = 1) => {\n  const res = await axios.get(\n    `/search/movie?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\nexport const getMovieDetails = async id => {\n  const res = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n\n  return res.data;\n};\nexport const getMoviesCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\nexport const getMovieReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","error","setError","useEffect","fetchReviews","getMovieReviews","res","map","review","author","content","id","API_KEY","axios","getTrending","page","data","results","getMovieSearch","query","getMovieDetails","getMoviesCredits","cast"],"sourceRoot":""}