{"version":3,"file":"static/js/835.744a23f8.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","pages/MovieSearchPage/MoviesPage.jsx","service/movie-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\",\"title\":\"MovieList_title__QyMtJ\"};","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport style from \"./MovieList.module.css\"\n\nconst MovieList = ({ movies, prevLocation }) => {\n  return (\n    <>\n      <ul className={style.list}>\n        {movies.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: prevLocation }}>\n              <span className={style.title}>{title}</span>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\nexport default MovieList;","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchBar_searchForm__V6XO6\",\"searchInput\":\"SearchBar_searchInput__S8ff+\",\"searchButton\":\"SearchBar_searchButton__hgPYE\"};","import style from \"./SearchBar.module.css\"\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nconst SearchBar = ({ onSearch }) => {\n    const [searchQuery, setSearchQuery] = useState('');\n    const handleQuerySearch = e => {\n    setSearchQuery(e.target.value.toLowerCase());\n};\n\n    const handleSubmit = e => {\n    e.preventDefault();\n    if (searchQuery.trim() === '') {\n        alert('Enter the film title');\n    }\n\n    onSearch(searchQuery);\n    setSearchQuery('');\n};\n\n    return (\n    <>\n    <form onSubmit={handleSubmit} className={style.searchForm}>\n        <input\n        type=\"text\"\n        name=\"searchQuery\"\n        value={searchQuery}\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Type to search\"\n        onChange={handleQuerySearch}\n        className={style.searchInput}\n        />\n        <button\n        type=\"submit\"\n        className={style.searchButton}\n        >\n        Search\n        </button>\n    </form>\n    </>\n);\n};\n\nSearchBar.propTypes = {\n    onSearch: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;","import { useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport MovieList from 'components/MovieList/MovieList';\nimport {getMovieSearch} from \"../../service/movie-api\"\n\nconst MoviesPage = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const location = useLocation();\n    const searchRequest = searchParams.get('query');\n\n    useEffect(() => {\n    if (!searchRequest) {\n    return;\n    }\n\n    const fetchMovie = () => {\n        setLoading(true);\n        getMovieSearch(searchRequest)\n        .then(results => {\n        if (!results.length) {\n            alert('No movies found!');\n        }\n\n        setMovies(results);\n        })\n        .catch(error => {\n        setError('Ooops. Try again');\n        console.log(error);\n        })\n        .finally(setLoading(false));\n    };\n    fetchMovie();\n}, [searchRequest]);\n    function onSubmit(value) {\n    setSearchParams({ query: `${value}` });\n}\n\nreturn (\n    <>\n        {loading && 'Loading ...'}\n        {error && <div>{error}</div>}\n        <SearchBar onSearch={onSubmit} />\n        {movies && <MovieList movies={movies} prevLocation={location} />}\n    </>\n);\n};\nexport default MoviesPage;","import axios from 'axios';\n\nconst API_KEY = '874182b6b3aecb13c206a219dffff167';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrending = async (page = 1) => {\n  const res = await axios.get(\n    `/trending/movie/week?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n  return res.data.results;\n};\n\nexport const getMovieSearch = async (query, page = 1) => {\n  const res = await axios.get(\n    `/search/movie?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\nexport const getMovieDetails = async id => {\n  const res = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n\n  return res.data;\n};\nexport const getMoviesCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\nexport const getMovieReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n};\n"],"names":["movies","prevLocation","className","style","map","id","title","to","state","from","onSearch","useState","searchQuery","setSearchQuery","onSubmit","e","preventDefault","trim","alert","type","name","value","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","useSearchParams","searchParams","setSearchParams","setMovies","error","setError","loading","setLoading","location","useLocation","searchRequest","get","useEffect","getMovieSearch","then","results","length","catch","console","log","finally","query","MovieList","API_KEY","axios","getTrending","page","res","data","getMovieDetails","getMoviesCredits","cast","getMovieReviews"],"sourceRoot":""}